name: Backend CI

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths: 
      - 'backend/**'

jobs:
  # ===== JOB 1: BUILD & TEST =====
  build-and-test:
    name: ☕ Build & Test Spring Boot
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: ☕ Setup Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'  
        distribution: 'temurin'
        cache: maven
    
    - name: 🔧 Compile & Test
      working-directory: ./backend/todo
      run: |
        chmod +x mvnw
        ./mvnw clean compile test --batch-mode
    
    - name: 📊 Test Results
      working-directory: ./backend/todo
      run: |
        echo "📋 Résultats des tests :"
        find target/surefire-reports -name "*.txt" -exec cat {} \; || echo "Pas de rapports de test"

  # ===== JOB 2: PACKAGE JAR =====
  package-jar:
    name: 📦 Package JAR
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: ☕ Setup Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: 📦 Create JAR
      working-directory: ./backend/todo
      run: |
        chmod +x mvnw
        ./mvnw clean package -DskipTests --batch-mode
    
    - name: ✅ Verify JAR
      working-directory: ./backend/todo
      run: |
        echo "📦 JAR créé :"
        ls -la target/*.jar
    
    - name: 📤 Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: spring-boot-jar
        path: backend/todo/target/*.jar

  # ===== JOB 3: BUILD DOCKER =====
  build-docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: package-jar
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐳 Build Docker image
      working-directory: ./backend/todo
      run: |
        docker build -t xks-todo-backend:${{ github.sha }} .
        docker build -t xks-todo-backend:latest .
    
    - name: 📋 Docker image info
      run: |
        echo "🐳 Images créées :"
        docker images | grep xks-todo-backend
        echo "📏 Taille :"
        docker images xks-todo-backend:latest --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

  # ===== JOB 4: DEPLOY SIMULATION =====
  deploy:
    name: 🚀 Deploy Simulation
    runs-on: ubuntu-latest
    needs: [build-and-test, package-jar, build-docker, test-docker]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🎯 Deploy simulation
      run: |
        echo "🎉 === DÉPLOIEMENT BACKEND SIMULÉ ==="
        echo "✅ Tests passés avec succès"
        echo "✅ JAR créé et testé"
        echo "✅ Image Docker créée et testée"
        echo "🐳 Image : xks-todo-backend:latest"
        echo "🌐 Prêt pour déploiement sur :"
        echo "   - AWS ECS"
        echo "   - Kubernetes"
        echo "   - Docker Swarm"
        echo "   - Votre serveur"
        echo "💡 Commande : docker run -p 8080:8080 xks-todo-backend:latest"